imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

services:
    fos_user.doctrine_registry:
        alias: doctrine

    aws.s3.client:
        class:  Aws\S3\S3Client

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
            legacy:
                driver:   "%database_driver2%"
                host:     "%database_host2%"
                port:     "%database_port2%"
                dbname:   "%database_name2%"
                user:     "%database_user2%"
                password: "%database_password2%"
                charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_entity_manager: default
        entity_managers:
            default:
                connection: default
                mappings:
                    ApiBundle: ~
                    ApiUserBundle: ~
                    FOSUserBundle: ~
                    TMGApiOAuthBundle: ~
                    FOSOAuthServerBundle: ~
                    ApiDocsBundle: ~
            legacy:
                dql:
                    numeric_functions:
                       acos: DoctrineExtensions\Query\Mysql\Acos
                       asin: DoctrineExtensions\Query\Mysql\Asin
                       atan2: DoctrineExtensions\Query\Mysql\Atan2
                       atan: DoctrineExtensions\Query\Mysql\Atan
                       ceil: DoctrineExtensions\Query\Mysql\Ceil
                       cos: DoctrineExtensions\Query\Mysql\Cos
                       cot: DoctrineExtensions\Query\Mysql\Cot
                       floor: DoctrineExtensions\Query\Mysql\Floor
                       hour: DoctrineExtensions\Query\Mysql\Hour
                       pi: DoctrineExtensions\Query\Mysql\Pi
                       power: DoctrineExtensions\Query\Mysql\Power
                       quarter: DoctrineExtensions\Query\Mysql\Quarter
                       rand: DoctrineExtensions\Query\Mysql\Rand
                       round: DoctrineExtensions\Query\Mysql\Round
                       sin: DoctrineExtensions\Query\Mysql\Sin
                       std: DoctrineExtensions\Query\Mysql\Std
                       tan: DoctrineExtensions\Query\Mysql\Tan
                       radians: DoctrineExtensions\Query\Mysql\Radians
                connection: legacy
                naming_strategy: tmg.helpers.naming_strategy
                mappings:
                    TMGApiLegacyBundle: ~


# Doctrine Migrations
doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: TMG\Api\Migrations
    table_name: migration_versions
    name: Api Migrations

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Ivory WYSIWYG Configuration
ivory_ck_editor:
    default_config: tmg_config
    configs:
        tmg_config:
            toolbar: [ ["Bold", "Italic", "Underline", "Strike", "Subscript", "Superscript" ] [ "NumberedList", "BulletedList", "Indent", "Blockquote"] ["JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock"] ["Link", "Image"] ["Format", "TextColor"] ["Source"] ]

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: TMG\Api\UserBundle\Entity\User
    registration:
        confirmation:
            enabled: true

fos_oauth_server:
    db_driver: orm       # Driver availables: orm, mongodb, or propel
    client_class:        TMG\Api\OAuthBundle\Entity\Client
    access_token_class:  TMG\Api\OAuthBundle\Entity\AccessToken
    refresh_token_class: TMG\Api\OAuthBundle\Entity\RefreshToken
    auth_code_class:     TMG\Api\OAuthBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username_email
        options:
            access_token_lifetime: 1209600

ekino_new_relic:
    enabled: "%newrelic_reporting_enabled%"           # Defaults to true
    application_name: "%newrelic_application_name%"   # default value in newrelic is "PHP Application", or whatever is set
                                                      # as php ini-value
    api_key: "%newrelic_api_key%"                     # New Relic API
    license_key: "%newrelic_license_key%"             # New Relic license key
    xmit: false                                       # if you want to record the metric data up to the point newrelic_set_appname is called, set this to true
    logging: false                                    # If true, logs all New Relic interactions to the Symfony log
    instrument: false                                 # If true, uses enhanced New Relic RUM instrumentation (see below)
    log_exceptions: false                             # If true, sends exceptions to New Relic
    log_commands: true                                # If true, logs CLI commands to New Relic as Background jobs (>2.3 only)
    using_symfony_cache: true                         # Symfony HTTP cache (see below)
    transaction_naming: route                         # route, controller or service (see below)
    transaction_naming_service: ~                     # Transaction naming service (see below)
    ignored_routes: []                                # No transaction recorded for this routes
    ignored_paths: []                                 # No transaction recorded for this paths
    ignored_commands: []                              # No transaction recorded for this commands (background tasks)

sensio_framework_extra:
    view:
        annotations: false

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    serializer:
        groups: ['Default']
        serialize_null: true
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Symfony\Component\HttpKernel\Exception\NotFoundHttpException': 404
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
            'Symfony\Component\HttpKernel\Exception\NotFoundHttpException': true
    view:
        formats:
            json: true
            xml: false
            html: false
            rss: false
        view_response_listener: force
    routing_loader:
        default_format: json

jms_serializer:
    metadata:
        directories:
            FOSUserBundle:
                namespace_prefix: "FOS\\UserBundle"
                path: "%kernel.root_dir%/serializer/FOSUserBundle"

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'PATCH', 'GET', 'DELETE']
            max_age: 3600

        '^/v2/api/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'PATCH', 'GET', 'DELETE']
            max_age: 3600

aws:
    version: latest
    region: us-east-1
    credentials:
        key: "%aws_access_key_id%"
        secret: "%aws_secret_access_key%"
    S3:
        region: "us-east-1"
        credentials:
            key: "%aws_access_key_id%"
            secret: "%aws_secret_access_key%"
